{"ast":null,"code":"var _jsxFileName = \"/Users/kinjalmehta/Desktop/writeSoftwareHere/data-work/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport data from './Student_Data.json';\nimport Card from './Component/Card/Card';\nimport { v4 as uuidv4 } from 'uuid';\nimport Form from './Component/Form/Form';\nimport { useHistory } from \"react-router-dom\";\nimport { MDBCol, MDBFormInline, MDBBtn } from \"mdbreact\"; // import { Button } from 'reactstrap';\n\nimport Modal from './Component/Modal/Modal';\nimport CardDetails from './Component/CardDetails/CardDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet uuidData = data.map(i => {\n  return { ...i,\n    Id: uuidv4()\n  };\n});\n\nfunction App() {\n  _s();\n\n  const [fav, setFav] = useState([]);\n  const [data, setData] = useState([]);\n  const [deletedRecords, setDeletedRecords] = useState([]);\n  const [careerUrl, setCareerUrl] = useState(\"\");\n  const [employer, setEmployer] = useState(\"\");\n  const [graduationDate, setGraduationDate] = useState(\"\");\n  const [jobStartYear, setJobStartYear] = useState(\"\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [specialization, setSpecialization] = useState(\"\");\n  const [universityName, setUniversityName] = useState(\"\");\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(false);\n  const [isModalOpen, setModelOpen] = useState(false);\n  const [records, setRecords] = useState({});\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchInvoked, setSearchInvoked] = useState(false); // const [filteredData,setFilteredData]=useState([])\n  // const [graduationYearFilter,setGraduationYearFilter]=useState({})\n  // console.log(deletedRecords,'deletedRecords');\n\n  const history = useHistory();\n\n  function getFavs() {\n    let empData = uuidData.filter(i => fav.includes(i.Id));\n    let returnEmployerName = empData.map(i => i.Employer);\n    return returnEmployerName.join(\",\");\n  }\n\n  function handleFormSubmit() {\n    console.log('handleFormSubmit invoked');\n    setIsSubmitDisabled(true);\n    setTimeout(() => {\n      setIsSubmitDisabled(false);\n    }, 3000);\n    let objReady = {\n      Career_Url: careerUrl,\n      Employer: employer,\n      Graduation_Year: graduationDate,\n      Job_Start_Date: jobStartYear,\n      Job_Title: jobTitle,\n      Specialization: specialization,\n      University_Name: universityName,\n      Id: uuidv4()\n    };\n    let copyData = [objReady, ...data];\n    setData(copyData);\n  } // function createNewRecord() {\n  // }\n\n\n  function deleteRecord(e, Id) {\n    let deletedRecord = data.filter(i => {\n      e.stopPropagation();\n      return i.Id === Id;\n    });\n    console.log(deletedRecord, 'deletedRecord');\n    let copyDelRecords = [...deletedRecords];\n    copyDelRecords.push(deletedRecord[0]);\n    setDeletedRecords(copyDelRecords); /////////Logic for updating screen\n\n    let remainingRecord = data.filter(i => {\n      return i.Id !== Id;\n    });\n    setData(remainingRecord);\n    console.log(remainingRecord, 'remainingRecord');\n  }\n\n  useEffect(() => {\n    setData(uuidData);\n  }, []);\n\n  function handleRetrieveAllRecords() {\n    let mergedRecords = [...deletedRecords, ...data];\n    console.log(mergedRecords, 'mergedRecords');\n    setData(mergedRecords);\n    setDeletedRecords([]);\n  }\n\n  function handleCardDetailsOnClick(Id) {\n    console.log(\"hi from card: \");\n    let p = data.filter(i => i.Id === Id);\n    console.log(p[0]);\n    setRecords(p[0]);\n    setModelOpen(true);\n  }\n\n  function handleClear() {\n    setSearchText(\"\");\n    setSearchInvoked(false);\n  }\n\n  function handleSearch() {\n    if (searchText.length === 0) {\n      setSearchInvoked(false);\n    } else {\n      setSearchInvoked(true);\n    }\n\n    let copy = [...data];\n    copy = copy.filter(i => {\n      return i.Employer.toLowerCase().includes(searchText.toLowerCase());\n    });\n    console.log(copy);\n\n    if (setSearchInvoked) {\n      setFilteredData(copy);\n    }\n  }\n\n  function filterLogic() {\n    if (searchInvoked) {\n      // return filteredData\n      const filterByYear = filteredData.filter(i => {\n        const gradYear = i.Graduation_Year;\n        return graduationYearFilter[gradYear];\n      });\n      return filterByYear;\n    }\n\n    return data;\n  }\n\n  const univName = data.map((i, idx) => {\n    const {\n      Employer,\n      Career_Url,\n      Job_Title,\n      Id\n    } = i;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleCardDetailsOnClick(Id),\n      className: \"cardhover\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        careerUrl: Career_Url,\n        Employer: Employer,\n        Job_Title: Job_Title,\n        setFav: setFav,\n        fav: fav,\n        Id: Id,\n        deleteRecord: deleteRecord\n      }, Id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 6\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          margin: '10px',\n          padding: '10px'\n        },\n        onClick: () => setFav([]),\n        children: \"Clear All Favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          margin: '10px',\n          padding: '10px'\n        },\n        onClick: () => handleRetrieveAllRecords(),\n        children: \"Retrieve All Records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px',\n        padding: '10px'\n      },\n      children: `Total record :::${data.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px',\n        padding: '10px'\n      },\n      children: `Total deleted record :::${deletedRecords.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"display data\",\n      buttonLabel: \"Open\",\n      handleFormSubmit: handleFormSubmit,\n      isModalOpen: isModalOpen,\n      setModelOpen: setModelOpen,\n      children: /*#__PURE__*/_jsxDEV(CardDetails, {\n        Employer: records.Employer,\n        careerUrl: records.Career_Url,\n        Job_Title: records.Job_Title,\n        Job_Start_Date: records.Job_Start_Date,\n        Specialization: records.Specialization,\n        University_Name: records.University_Name,\n        Id: records.Id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MDBFormInline, {\n        className: \"md-form mr-auto mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control mr-sm-2\",\n          type: \"text\",\n          placeholder: \"Search\",\n          \"aria-label\": \"Search\",\n          onChange: e => setSearchText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          gradient: \"aqua\",\n          rounded: true,\n          size: \"sm\",\n          type: \"button\",\n          className: \"mr-auto\",\n          onClick: () => handleSearch(),\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 8\n      }, this), searchInvoked && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleClear(),\n          color: \"primary\",\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 6\n        }, this), getGraduationYear()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: '10px',\n          padding: '10px'\n        },\n        children: \"Favorite Company:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), getFavs()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        margin: '10px',\n        padding: '10px'\n      },\n      children: \"Here is list of companies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: univName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 1\n  }, this);\n}\n\n_s(App, \"cRo35d11X2OrCoLvZMfB2WyF3Wk=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kinjalmehta/Desktop/writeSoftwareHere/data-work/src/App.js"],"names":["React","useEffect","useState","data","Card","v4","uuidv4","Form","useHistory","MDBCol","MDBFormInline","MDBBtn","Modal","CardDetails","uuidData","map","i","Id","App","fav","setFav","setData","deletedRecords","setDeletedRecords","careerUrl","setCareerUrl","employer","setEmployer","graduationDate","setGraduationDate","jobStartYear","setJobStartYear","jobTitle","setJobTitle","specialization","setSpecialization","universityName","setUniversityName","isSubmitDisabled","setIsSubmitDisabled","isModalOpen","setModelOpen","records","setRecords","searchText","setSearchText","searchInvoked","setSearchInvoked","history","getFavs","empData","filter","includes","returnEmployerName","Employer","join","handleFormSubmit","console","log","setTimeout","objReady","Career_Url","Graduation_Year","Job_Start_Date","Job_Title","Specialization","University_Name","copyData","deleteRecord","e","deletedRecord","stopPropagation","copyDelRecords","push","remainingRecord","handleRetrieveAllRecords","mergedRecords","handleCardDetailsOnClick","p","handleClear","handleSearch","length","copy","toLowerCase","setFilteredData","filterLogic","filterByYear","filteredData","gradYear","graduationYearFilter","univName","idx","margin","padding","target","value","marginLeft","getGraduationYear"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport './App.css'\nimport data from './Student_Data.json' ;\nimport Card from './Component/Card/Card';\nimport { v4 as uuidv4 } from 'uuid';\nimport Form from './Component/Form/Form';\nimport { useHistory } from \"react-router-dom\";\nimport { MDBCol, MDBFormInline, MDBBtn } from \"mdbreact\";\n// import { Button } from 'reactstrap';\nimport Modal from './Component/Modal/Modal'\nimport CardDetails from './Component/CardDetails/CardDetails'\nlet  uuidData = data.map(i=>{\nreturn {\n    ...i, \n    Id: uuidv4()\n}\n\n})\n\nfunction App() {\nconst [fav, setFav] =useState([])\nconst [data, setData]=useState([])\nconst [deletedRecords, setDeletedRecords]=useState([])\nconst [careerUrl,setCareerUrl] =useState(\"\")\nconst [employer,setEmployer] =useState(\"\")\nconst [graduationDate,setGraduationDate] =useState(\"\")\nconst [jobStartYear,setJobStartYear] =useState(\"\")\nconst [jobTitle,setJobTitle] =useState(\"\")\nconst [specialization,setSpecialization] =useState(\"\")\nconst [universityName,setUniversityName] =useState(\"\")\nconst [isSubmitDisabled,setIsSubmitDisabled] =useState(false)\nconst [isModalOpen,setModelOpen] = useState(false);\nconst [records, setRecords] = useState({});\nconst [searchText,setSearchText] = useState(\"\");\nconst [searchInvoked,setSearchInvoked]=useState(false);\n// const [filteredData,setFilteredData]=useState([])\n// const [graduationYearFilter,setGraduationYearFilter]=useState({})\n// console.log(deletedRecords,'deletedRecords');\n\nconst history= useHistory()\n\nfunction getFavs() {\nlet empData= uuidData.filter(i=>fav.includes(i.Id))\nlet returnEmployerName = empData.map(i=>i.Employer)\nreturn returnEmployerName.join(\",\")\n}\n\nfunction handleFormSubmit () {\n    console.log('handleFormSubmit invoked')\n    setIsSubmitDisabled(true)\n    setTimeout(()=>{\n        setIsSubmitDisabled(false)\n    },3000)\n\n    let objReady = {\n        Career_Url:careerUrl,\n        Employer:employer,\n        Graduation_Year:graduationDate,\n        Job_Start_Date:jobStartYear,\n        Job_Title:jobTitle,\n        Specialization:specialization,\n        University_Name:universityName,\n        Id:uuidv4()\n    }\nlet copyData = [objReady,...data]\n\nsetData(copyData)\n    \n}\n// function createNewRecord() {\n\n// }\n\nfunction deleteRecord (e,Id) {\n\nlet deletedRecord= data.filter((i)=>{\n    e.stopPropagation();\n return i.Id ===Id \n})\nconsole.log(deletedRecord,'deletedRecord');\n\nlet  copyDelRecords=[...deletedRecords]\ncopyDelRecords.push(deletedRecord[0])\nsetDeletedRecords(copyDelRecords)\n\n/////////Logic for updating screen\nlet remainingRecord= data.filter((i)=>{\n    return i.Id !==Id \n   })   \nsetData(remainingRecord)\nconsole.log(remainingRecord,'remainingRecord');\n}\n\nuseEffect(()=>{\nsetData(uuidData)\n},[])\n\nfunction handleRetrieveAllRecords() {\nlet mergedRecords = [...deletedRecords,...data]\nconsole.log(mergedRecords,'mergedRecords');\nsetData(mergedRecords)\nsetDeletedRecords([])\n}\n\nfunction handleCardDetailsOnClick(Id){\n    console.log(\"hi from card: \")\n    let p = data.filter((i)=>(i.Id === Id));\n    console.log(p[0]);\n    setRecords(p[0]);\n     setModelOpen(true);\n}\n\nfunction handleClear(){\n    setSearchText(\"\")\n    setSearchInvoked(false)\n    }\n\n\nfunction handleSearch(){\n    if(searchText.length ===0){\n        setSearchInvoked(false)\n    }\n    else {\n        setSearchInvoked(true)\n    }\n   let copy =[...data];\n   copy = copy.filter(i=>{\n      return i.Employer.toLowerCase().includes(searchText.toLowerCase())\n  })\n  console.log(copy);\n  if(setSearchInvoked){\n    setFilteredData(copy)\n }\n}\n\nfunction filterLogic () {\n    if(searchInvoked){\n        // return filteredData\n       const filterByYear= filteredData.filter((i)=>{\n     const gradYear = i.Graduation_Year \n    return graduationYearFilter[gradYear]\n       })\n       return filterByYear\n    }\n        return data\n    }\n    \n\nconst univName =data.map((i,idx)=>{\nconst {Employer, Career_Url, Job_Title,Id} = i \n\n    return (\n     <div onClick={()=> handleCardDetailsOnClick(Id)} className=\"cardhover\">\n    <Card \n    careerUrl={Career_Url}\n    Employer={Employer}\n    Job_Title={Job_Title}\n    key={Id} \n    setFav={setFav}\n    fav={fav}\n    Id={Id}\n    deleteRecord={deleteRecord}\n    />\n    </div>\n    )\n})  \n        \nreturn (  \n \n<div>\n\n   <div>\n   {/* <Button color=\"danger\">Danger!</Button> */}\n     <br></br>\n        <button style={{margin:'10px',padding:'10px'}} onClick={()=>setFav([])}>Clear All Favorites</button>\n        <br></br>\n        {/* <button onClick={()=>history.push(\"/\")}>Go Home </button> */}\n\n        <button style={{margin:'10px',padding:'10px'}} onClick={()=>handleRetrieveAllRecords()}>Retrieve All Records</button>\n        <br></br>\n        {/* <button onClick={()=>history.push(`/test?isSubmitDisabled=${isSubmitDisabled}`)}>Test</button> */}\n            </div> \n        <div style={{margin:'10px',padding:'10px'}}>{`Total record :::${data.length}`}</div>\n        <div style={{margin:'10px',padding:'10px'}}>{`Total deleted record :::${deletedRecords.length}`}</div>\n        {/* <Modal\n        buttonLabel= 'New Data to Add'\n        title = 'Form'\n        buttonColor = 'success'\n        cta_primary = 'submit'\n        cta_sec = 'cancel'\n        handleFormSubmit={handleFormSubmit}\n        isModalOpen = {isModalOpen}\n        setModelOpen = {setModelOpen}\n        >\n        <Form \n        careerUrl={careerUrl}\n        employer={employer}\n        graduationDate={graduationDate}\n        jobStartYear={jobStartYear}\n        jobTitle={jobTitle}\n        specialization={specialization}\n        universityName={universityName}\n        setCareerUrl={setCareerUrl}\n        setEmployer={setEmployer}\n        setGraduationDate={setGraduationDate}\n        setJobStartYear={setJobStartYear}\n        setJobTitle={setJobTitle}\n        setSpecialization={setSpecialization}\n        setUniversityName={setUniversityName}\n        // handleFormSubmit={handleFormSubmit}\n        isSubmitDisabled={isSubmitDisabled}\n        />\n        </Modal> */}\n\n        <Modal\n        title = 'display data'\n        buttonLabel=\"Open\"\n        handleFormSubmit = {handleFormSubmit}\n        isModalOpen = {isModalOpen}\n        setModelOpen = {setModelOpen}\n        >\n       <CardDetails\n        Employer = {records.Employer}\n        careerUrl = {records.Career_Url}\n        Job_Title = {records.Job_Title}\n        Job_Start_Date = {records.Job_Start_Date}\n        Specialization = {records.Specialization}\n        University_Name = {records.University_Name}\n        Id = {records.Id}\n       />\n        </Modal>\n<br></br>\n<div>\n       <MDBFormInline className=\"md-form mr-auto mb-4\">    \n        <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" onChange={(e)=>setSearchText(e.target.value)}/>\n        <MDBBtn gradient=\"aqua\" rounded size=\"sm\" type=\"button\" className=\"mr-auto\" onClick={()=>handleSearch()}>\n          Search\n        </MDBBtn>\n        </MDBFormInline>\n        {searchInvoked && <span style={{marginLeft:'20px'}} >\n     <Button onClick={()=>handleClear()} color=\"primary\">Clear</Button>\n     {getGraduationYear()}\n     </span>\n}       \n  \n</div>\n\n        <div> \n        <h2 style={{margin:'10px',padding:'10px'}}>Favorite Company:</h2>\n        {getFavs()}\n        </div>\n        <br></br>\n        \n        \n        <h2 style={{margin:'10px',padding:'10px'}}>Here is list of companies</h2>\n        <br></br>\n        <br></br>\n        <div>\n        {univName}\n        </div>  \n        </div>\n\n\n\n        ) ;      \n\n        }\n\n        export default App"]},"metadata":{},"sourceType":"module"}