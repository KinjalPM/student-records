{"ast":null,"code":"var _jsxFileName = \"/Users/kinjalmehta/Desktop/writeSoftwareHere/student-records/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css'; // import data from './Student_Data.json' ;\n\nimport Card from './Component/Card/Card';\nimport { v4 as uuidv4 } from 'uuid';\nimport Form from './Component/Form/Form';\nimport { useHistory } from \"react-router-dom\";\nimport { MDBCol, MDBFormInline, MDBBtn } from \"mdbreact\";\nimport { Button } from 'reactstrap';\nimport Modal from './Component/Modal/Modal';\nimport CardDetails from './Component/CardDetails/CardDetails';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport axios from './Axios'; //   import history from './Component/History/history';\n\nimport RecordDetails from './Component/RecordDetails/RecordDetails'; // let  uuidData = data.map(i=>{\n// return {\n//     ...i, \n//     Id: uuidv4()\n// }\n// })\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [fav, setFav] = useState([]);\n  const [data, setData] = useState([]);\n  const [deletedRecords, setDeletedRecords] = useState([]);\n  const [careerUrl, setCareerUrl] = useState(\"\");\n  const [companyName, setcompanyName] = useState(\"\");\n  const [graduationDate, setGraduationDate] = useState(\"\");\n  const [jobStartYear, setJobStartYear] = useState(\"\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [specialization, setSpecialization] = useState(\"\");\n  const [universityName, setUniversityName] = useState(\"\");\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(false);\n  const [isModalOpen, setModelOpen] = useState(false);\n  const [viewCurrentRecord, setViewCurrentRecord] = useState({});\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchInvoked, setSearchInvoked] = useState(false);\n  const [filteredData, setFilteredData] = useState([]);\n  const [graduationYearFilter, setGraduationYearFilter] = useState({});\n  const [searchDa, setSearchDA] = useState(\"\");\n  const [page, setPage] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemPerPage, setItemPerPage] = useState(25);\n  const [flag, setFlag] = useState(false);\n  const history = useHistory(); // console.log(page,'page')\n  // console.log(page.length,'page.length')\n  // console.log(currentPage,'currentPage')\n  // console.log(page.length ==   currentPage-1)\n  // axios.defaults.baseURL = 'https://reaction-kinjal-mehta.herokuapp.com/'\n\n  useEffect(() => {\n    setFlag(true);\n    axios.get('/v1/record/getAllRecords').then(res => {\n      console.log(res);\n      setData(res.data);\n      setFlag(false);\n    }).catch(e => {\n      setFlag(false);\n      console.log(e);\n    });\n  }, []);\n  useEffect(() => {\n    let totalItems = data && data.length;\n    let totalPg = Math.ceil(totalItems / itemPerPage); // console.log(\"totalPage: \"+totalPg);\n\n    let empArr = Array(totalPg).fill(0); // console.log(empArr);\n\n    let pages = empArr.map((i, idx) => {\n      return (idx + 1).toString();\n    }); // console.log(pages+\"page\")\n\n    setPage(pages);\n  }, [data, itemPerPage]);\n\n  function handlePagniation() {\n    //     // e.stopPropagation();\n    // console.log(\"handlePagniation\")\n    // console.log(\"Current page value\" + currentPage)\n    // console.log(\"pgNo\"+pageNumber)\n    let copyData = [...data];\n    let returnData = copyData.slice((currentPage - 1) * itemPerPage, currentPage * itemPerPage); //  console.log(returnData + \"returnData\");\n\n    return returnData;\n  }\n\n  function getFavs(e) {\n    let empData = data.filter(i => fav.includes(i.Id));\n    let returncompanyNameName = empData.map(i => i.companyName);\n    e.stopPropagation();\n    return returncompanyNameName.join(\",\");\n  }\n\n  function handleFormSubmit() {\n    // console.log('handleFormSubmit invoked')\n    setIsSubmitDisabled(true);\n    setTimeout(() => {\n      setIsSubmitDisabled(false);\n    }, 3000);\n    let objReady = {\n      Career_Url: careerUrl,\n      companyName: companyName,\n      Graduation_Year: graduationDate,\n      Job_Start_Date: jobStartYear,\n      Job_Title: jobTitle,\n      Specialization: specialization,\n      University_Name: universityName,\n      Id: uuidv4()\n    };\n    let copyData = [objReady, ...data];\n    setData(copyData);\n  } // function createNewRecord() {\n  // }\n\n\n  function deleteRecord(e, Id) {\n    let deletedRecord = data.filter(i => {\n      e.stopPropagation();\n      return i.Id === Id;\n    }); // console.log(deletedRecord,'deletedRecord');\n\n    let copyDelRecords = [...deletedRecords];\n    copyDelRecords.push(deletedRecord[0]);\n    setDeletedRecords(copyDelRecords); /////////Logic for updating screen\n\n    let remainingRecord = data.filter(i => {\n      return i.Id !== Id;\n    });\n    setData(remainingRecord); // console.log(remainingRecord,'remainingRecord');\n  } // useEffect(()=>{\n  // setData(uuidData)\n  // },[])\n\n\n  function handleRetrieveAllRecords() {\n    let mergedRecords = [...deletedRecords, ...data]; // console.log(mergedRecords,'mergedRecords');\n\n    setData(mergedRecords);\n    setDeletedRecords([]);\n  } // // console.log('handleCardContainer',Id);  \n  // let entry =data.filter(i=>i.Id === Id)\n  // // console.log(entry,'filteredEntry');\n  // setViewCurrentRecord(entry[0])\n  //  setModelOpen(true);\n  // console.log(Id)\n\n\n  function handleCardContainerOnClick(c) {\n    let name = c.Comp;\n    history.push(`/v1/company/companieByName?name=${name}`);\n  }\n\n  function handleGraduationDateOnChange(year) {\n    let copyObj = { ...graduationYearFilter\n    };\n    copyObj[year] = !copyObj[year]; //  console.log(copyObj,'copyObj');\n\n    setGraduationYearFilter(copyObj);\n  }\n\n  useEffect(() => {\n    let getyears = filteredData.map(i => i.Graduation_Year);\n    let unique = [...new Set(getyears)];\n    let obj = {};\n    unique.forEach(l => {\n      obj[l] = true;\n    });\n    setGraduationYearFilter(obj);\n  }, [searchInvoked]);\n\n  function getGraduationYear() {\n    return Object.entries(graduationYearFilter).map(j => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          display: 'inlineFlex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: j[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: j[1],\n          onChange: () => handleGraduationDateOnChange(j[0]),\n          inputProps: {\n            'aria-label': 'primary checkbox'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this);\n    });\n  } // ********* CHANGE *************\n  // const univName =filterLogic().map((i,idx)=>{\n\n\n  const univName = handlePagniation().map((i, idx, arr) => {\n    const {\n      companyName,\n      Career_Url,\n      Job_Title,\n      Id,\n      Graduation_Year\n    } = i;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardDiv\",\n      onClick: () => handleCardContainerOnClick({\n        companyName\n      }),\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        careerUrl: Career_Url,\n        companyName: companyName,\n        Job_Title: Job_Title,\n        Graduation_Year: Graduation_Year,\n        setFav: setFav,\n        fav: fav,\n        Id: Id,\n        deleteRecord: deleteRecord\n      }, Id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this);\n  });\n\n  function handleClear() {\n    setSearchText(\"\");\n    setSearchInvoked(false);\n  }\n\n  function handleSearch() {\n    if (searchText.length === 0) {\n      setSearchInvoked(false);\n    } else {\n      setSearchInvoked(true);\n    }\n\n    let copyData = [...data];\n    copyData = copyData.filter(i => {\n      return i.companyName.toLowerCase().includes(searchText.toLowerCase());\n    }); //    console.log(copyData,'copyData');\n\n    if (setSearchInvoked) {\n      setFilteredData(copyData);\n    }\n  }\n\n  function handleKeyPress(e) {\n    if (e.which == 13 || e.keyCode == 13) {\n      //   console.log(\"enter press here!\");\n      handleSearch();\n    }\n  }\n\n  function filterLogic() {\n    if (searchInvoked) {\n      // return filteredData\n      const filterByYear = filteredData.filter(i => {\n        const gradYear = i.Graduation_Year;\n        return graduationYearFilter[gradYear];\n      });\n      return filterByYear;\n    }\n\n    return data;\n  }\n\n  if (flag) {\n    return /*#__PURE__*/_jsxDEV(LinearProgress, {\n      variant: \"determinate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          margin: '10px',\n          padding: '10px'\n        },\n        onClick: () => setFav([]),\n        children: \"Clear All Favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          margin: '10px',\n          padding: '10px'\n        },\n        onClick: () => handleRetrieveAllRecords(),\n        children: \"Retrieve All Records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px',\n        padding: '10px'\n      },\n      children: `Total record :::${filterLogic().length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px',\n        padding: '10px'\n      },\n      children: `Total deleted record :::${deletedRecords.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"display data\",\n      buttonLabel: \"Open\",\n      handleFormSubmit: handleFormSubmit,\n      isModalOpen: isModalOpen,\n      setModelOpen: setModelOpen,\n      children: /*#__PURE__*/_jsxDEV(CardDetails, {\n        companyName: viewCurrentRecord.companyName,\n        careerUrl: viewCurrentRecord.Career_Url,\n        Job_Title: viewCurrentRecord.Job_Title,\n        Job_Start_Date: viewCurrentRecord.Job_Start_Date,\n        Specialization: viewCurrentRecord.Specialization,\n        University_Name: viewCurrentRecord.University_Name,\n        Id: viewCurrentRecord.Id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search with Company name\",\n        value: searchText,\n        onKeyPress: e => handleKeyPress(e),\n        onChange: e => setSearchText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          disabled: searchInvoked,\n          onClick: () => handleSearch(),\n          color: \"primary\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 1\n      }, this), searchInvoked && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleClear(),\n          color: \"primary\",\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 6\n        }, this), getGraduationYear()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: '10px',\n          padding: '10px'\n        },\n        children: \"Favorite Company:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), e => getFavs()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        margin: '10px',\n        padding: '10px'\n      },\n      children: \"Here is list of companies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginLeft: '20px'\n        },\n        onClick: () => setCurrentPage(currentPage - 1),\n        disabled: currentPage == page[0],\n        color: \"primary\",\n        children: \"Pervious\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), page && page.map(i => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setCurrentPage(i);\n          },\n          children: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 19\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: page.length == currentPage,\n        onClick: () => setCurrentPage(parseInt(currentPage) + 1),\n        color: \"primary\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: univName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 1\n  }, this);\n}\n\n_s(App, \"AIHaLxBGRw/Ty+G8U0lt30Qu4tU=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kinjalmehta/Desktop/writeSoftwareHere/student-records/src/App.js"],"names":["React","useEffect","useState","Card","v4","uuidv4","Form","useHistory","MDBCol","MDBFormInline","MDBBtn","Button","Modal","CardDetails","Checkbox","makeStyles","LinearProgress","axios","RecordDetails","App","fav","setFav","data","setData","deletedRecords","setDeletedRecords","careerUrl","setCareerUrl","companyName","setcompanyName","graduationDate","setGraduationDate","jobStartYear","setJobStartYear","jobTitle","setJobTitle","specialization","setSpecialization","universityName","setUniversityName","isSubmitDisabled","setIsSubmitDisabled","isModalOpen","setModelOpen","viewCurrentRecord","setViewCurrentRecord","searchText","setSearchText","searchInvoked","setSearchInvoked","filteredData","setFilteredData","graduationYearFilter","setGraduationYearFilter","searchDa","setSearchDA","page","setPage","currentPage","setCurrentPage","itemPerPage","setItemPerPage","flag","setFlag","history","get","then","res","console","log","catch","e","totalItems","length","totalPg","Math","ceil","empArr","Array","fill","pages","map","i","idx","toString","handlePagniation","copyData","returnData","slice","getFavs","empData","filter","includes","Id","returncompanyNameName","stopPropagation","join","handleFormSubmit","setTimeout","objReady","Career_Url","Graduation_Year","Job_Start_Date","Job_Title","Specialization","University_Name","deleteRecord","deletedRecord","copyDelRecords","push","remainingRecord","handleRetrieveAllRecords","mergedRecords","handleCardContainerOnClick","c","name","Comp","handleGraduationDateOnChange","year","copyObj","getyears","unique","Set","obj","forEach","l","getGraduationYear","Object","entries","j","display","univName","arr","handleClear","handleSearch","toLowerCase","handleKeyPress","which","keyCode","filterLogic","filterByYear","gradYear","margin","padding","target","value","marginLeft","parseInt"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport './App.css'\n// import data from './Student_Data.json' ;\nimport Card from './Component/Card/Card';\nimport { v4 as uuidv4 } from 'uuid';\nimport Form from './Component/Form/Form';\nimport { useHistory } from \"react-router-dom\";\nimport { MDBCol, MDBFormInline, MDBBtn } from \"mdbreact\";\nimport { Button } from 'reactstrap';\nimport Modal from './Component/Modal/Modal'\nimport CardDetails from './Component/CardDetails/CardDetails'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport axios from'./Axios'\n//   import history from './Component/History/history';\nimport RecordDetails from './Component/RecordDetails/RecordDetails';\n\n// let  uuidData = data.map(i=>{\n// return {\n//     ...i, \n//     Id: uuidv4()\n// }\n\n// })\n\nfunction App() {\nconst [fav, setFav] =useState([])\nconst [data, setData]=useState([])\nconst [deletedRecords, setDeletedRecords]=useState([])\nconst [careerUrl,setCareerUrl] =useState(\"\")\nconst [companyName,setcompanyName] =useState(\"\")\nconst [graduationDate,setGraduationDate] =useState(\"\")\nconst [jobStartYear,setJobStartYear] =useState(\"\")\nconst [jobTitle,setJobTitle] =useState(\"\")\nconst [specialization,setSpecialization] =useState(\"\")\nconst [universityName,setUniversityName] =useState(\"\")\nconst [isSubmitDisabled,setIsSubmitDisabled] =useState(false)\nconst [isModalOpen,setModelOpen] = useState(false);\nconst [viewCurrentRecord,setViewCurrentRecord]=useState({})\nconst [searchText,setSearchText]=useState(\"\")\nconst [searchInvoked,setSearchInvoked]=useState(false)\nconst [filteredData,setFilteredData]=useState([])\nconst [graduationYearFilter,setGraduationYearFilter]=useState({})\nconst [searchDa,setSearchDA] = useState(\"\")\nconst [page,setPage] = useState([])\nconst [currentPage,setCurrentPage]=useState(1)\nconst [itemPerPage,setItemPerPage] = useState(25)\nconst [flag, setFlag] = useState(false)\n\n const history= useHistory()\n\n// console.log(page,'page')\n// console.log(page.length,'page.length')\n// console.log(currentPage,'currentPage')\n// console.log(page.length ==   currentPage-1)\n\n// axios.defaults.baseURL = 'https://reaction-kinjal-mehta.herokuapp.com/'\n\n\nuseEffect(()=>{\n    setFlag(true);\n   axios.get('/v1/record/getAllRecords')\n    .then(\n        res=>{\n            console.log(res)\n            setData(res.data)\n            setFlag(false);\n        })\n    .catch((e)=>{\n        setFlag(false)\n        console.log(e)\n    })\n},[])\n\n\nuseEffect(()=>{\n    let  totalItems = data && data.length;\n    let totalPg = Math.ceil(totalItems/itemPerPage);\n    // console.log(\"totalPage: \"+totalPg);\n    let empArr = Array(totalPg).fill(0)\n    // console.log(empArr);\n    let pages = empArr.map((i,idx)=>{\n        return ((idx+1).toString())\n    })\n    // console.log(pages+\"page\")\n    setPage(pages);\n},[data,itemPerPage])\n\nfunction handlePagniation(){\n//     // e.stopPropagation();\n// console.log(\"handlePagniation\")\n// console.log(\"Current page value\" + currentPage)\n// console.log(\"pgNo\"+pageNumber)\nlet copyData = [...data]\nlet returnData = copyData.slice((currentPage-1)*itemPerPage,currentPage*itemPerPage);\n//  console.log(returnData + \"returnData\");\nreturn returnData;\n}\n\nfunction getFavs(e) {\nlet empData= data.filter(i=>fav.includes(i.Id))\nlet returncompanyNameName = empData.map(i=>i.companyName)\ne.stopPropagation();\nreturn returncompanyNameName.join(\",\")\n}\n\nfunction handleFormSubmit () {\n    // console.log('handleFormSubmit invoked')\n    setIsSubmitDisabled(true)\n    setTimeout(()=>{\n        setIsSubmitDisabled(false)\n    },3000)\n\n    let objReady = {\n        Career_Url:careerUrl,\n        companyName:companyName,\n        Graduation_Year:graduationDate,\n        Job_Start_Date:jobStartYear,\n        Job_Title:jobTitle,\n        Specialization:specialization,\n        University_Name:universityName,\n        Id:uuidv4()\n    }\nlet copyData = [objReady,...data]\n\nsetData(copyData)\n    \n}\n// function createNewRecord() {\n\n// }\n\nfunction deleteRecord (e,Id) {\n\nlet deletedRecord= data.filter((i)=>{\n    e.stopPropagation();\n return i.Id ===Id \n})\n// console.log(deletedRecord,'deletedRecord');\n\nlet  copyDelRecords=[...deletedRecords]\ncopyDelRecords.push(deletedRecord[0])\nsetDeletedRecords(copyDelRecords)\n\n/////////Logic for updating screen\nlet remainingRecord= data.filter((i)=>{\n    return i.Id !==Id \n   })   \nsetData(remainingRecord)\n// console.log(remainingRecord,'remainingRecord');\n}\n\n// useEffect(()=>{\n// setData(uuidData)\n// },[])\n\nfunction handleRetrieveAllRecords() {\nlet mergedRecords = [...deletedRecords,...data]\n// console.log(mergedRecords,'mergedRecords');\nsetData(mergedRecords)\nsetDeletedRecords([])\n}\n\n\n    // // console.log('handleCardContainer',Id);  \n    // let entry =data.filter(i=>i.Id === Id)\n    // // console.log(entry,'filteredEntry');\n    // setViewCurrentRecord(entry[0])\n    //  setModelOpen(true);\n    // console.log(Id)\nfunction handleCardContainerOnClick(c){\n    let name = c.Comp\n    history.push(`/v1/company/companieByName?name=${name}`)\n}\n\nfunction handleGraduationDateOnChange(year){\n\n    let copyObj= {...graduationYearFilter}\n    copyObj[year]=!copyObj[year]\n//  console.log(copyObj,'copyObj');\n setGraduationYearFilter(copyObj)\n\n}\nuseEffect(()=>{\n    let getyears=filteredData.map(i=>i.Graduation_Year)\n    let unique = [...new Set(getyears)];\n \n    let obj={}\nunique.forEach(l=>{\n      obj[l]=true\n })\n  setGraduationYearFilter(obj)\n    \n},[searchInvoked])\n\nfunction getGraduationYear(){\n\n    return  Object.entries(graduationYearFilter).map(j=>{\n        return  <span style={{display:'inlineFlex'}}>\n       <label>{j[0]}</label>\n       <Checkbox\n          checked={j[1]}\n          onChange={()=>handleGraduationDateOnChange(j[0])}\n          inputProps={{ 'aria-label': 'primary checkbox' }}\n        />\n        </span>\n     })\n      \n  }\n\n// ********* CHANGE *************\n// const univName =filterLogic().map((i,idx)=>{\n    const univName =handlePagniation().map((i,idx,arr)=>{\n        const {companyName, Career_Url, Job_Title,Id,Graduation_Year} = i \n        \n        return (\n            <div className='cardDiv' onClick={()=>handleCardContainerOnClick({companyName})}>\n            <Card \n            careerUrl={Career_Url}\n            companyName={companyName}\n            Job_Title={Job_Title}\n            Graduation_Year={Graduation_Year}\n            key={Id} \n            setFav={setFav}\n            fav={fav}\n            Id={Id}\n            deleteRecord={deleteRecord}\n            />\n            </div>\n            )\n            \n        })    \n\n\n        function handleClear(){\n            setSearchText(\"\")\n            setSearchInvoked(false)\n            }\n\n            function handleSearch () {\n                if(searchText.length ===0){\n                    setSearchInvoked(false)\n                }\n                else {\n                    setSearchInvoked(true)\n                }\n            \n                let copyData =[...data]\n                    copyData = copyData.filter(i=>{\n                    return i.companyName.toLowerCase().includes(searchText.toLowerCase())\n                   }) \n                //    console.log(copyData,'copyData');\n                if(setSearchInvoked){\n                   setFilteredData(copyData)\n                }\n                \n            }\n\n            function handleKeyPress (e) {\n                if(e.which == 13 || e.keyCode == 13){\n                //   console.log(\"enter press here!\");\n                  handleSearch()\n                }\n              }\n            \n\nfunction filterLogic () {\nif(searchInvoked){\n    // return filteredData\n   const filterByYear= filteredData.filter((i)=>{\n const gradYear = i.Graduation_Year \nreturn graduationYearFilter[gradYear]\n   })\n   return filterByYear\n}\n    return data\n}\n\nif(flag){\n    return <LinearProgress variant=\"determinate\"/>\n}\n\nreturn (  \n \n<div>\n\n   <div>\n   {/* <Button color=\"danger\">Danger!</Button> */}\n     <br></br>\n        <button style={{margin:'10px',padding:'10px'}} onClick={()=>setFav([])}>Clear All Favorites</button>\n        <br></br>\n        {/* <button onClick={()=>history.push(\"/\")}>Go Home </button> */}\n\n        <button style={{margin:'10px',padding:'10px'}} onClick={()=>handleRetrieveAllRecords()}>Retrieve All Records</button>\n        <br></br>\n        {/* <button onClick={()=>history.push(`/test?isSubmitDisabled=${isSubmitDisabled}`)}>Test</button> */}\n            </div> \n        <div style={{margin:'10px',padding:'10px'}}>{`Total record :::${filterLogic().length}`}</div>\n        <div style={{margin:'10px',padding:'10px'}}>{`Total deleted record :::${deletedRecords.length}`}</div>\n        {/* <Modal\n        buttonLabel= 'New Data to Add'\n        title = 'Form'\n        buttonColor = 'success'\n        cta_primary = 'submit'\n        cta_sec = 'cancel'\n        handleFormSubmit={handleFormSubmit}\n        isModalOpen = {isModalOpen}\n        setModelOpen = {setModelOpen}\n        >\n        <Form \n        careerUrl={careerUrl}\n        companyName={companyName}\n        graduationDate={graduationDate}\n        jobStartYear={jobStartYear}\n        jobTitle={jobTitle}\n        specialization={specialization}\n        universityName={universityName}\n        setCareerUrl={setCareerUrl}\n        setcompanyName={setcompanyName}\n        setGraduationDate={setGraduationDate}\n        setJobStartYear={setJobStartYear}\n        setJobTitle={setJobTitle}\n        setSpecialization={setSpecialization}\n        setUniversityName={setUniversityName}\n        // handleFormSubmit={handleFormSubmit}\n        isSubmitDisabled={isSubmitDisabled}\n        />\n        </Modal> */}\n\n        <Modal\n        title = 'display data'\n        buttonLabel=\"Open\"\n        handleFormSubmit = {handleFormSubmit}\n        isModalOpen = {isModalOpen}\n        setModelOpen = {setModelOpen}\n        >\n       <CardDetails\n        companyName = {viewCurrentRecord.companyName}\n        careerUrl = {viewCurrentRecord.Career_Url}\n        Job_Title={viewCurrentRecord.Job_Title}\n        Job_Start_Date={viewCurrentRecord.Job_Start_Date}\n        Specialization={viewCurrentRecord.Specialization}\n        University_Name={viewCurrentRecord.University_Name}\n        Id = {viewCurrentRecord.Id}\n       />\n        </Modal>\n<br></br>\n\n<div>\n<input placeholder='Search with Company name'  value={searchText} onKeyPress={(e)=>handleKeyPress(e)} onChange={(e)=>setSearchText(e.target.value)}/>\n<span style={{marginLeft:'20px'}}><Button disabled={searchInvoked} onClick={()=>handleSearch()} color=\"primary\">Search</Button></span>\n{searchInvoked && <span style={{marginLeft:'20px'}}>\n     <Button onClick={()=>handleClear()} color=\"primary\">Clear</Button>\n     {getGraduationYear()}\n\n</span>\n\n}\n</div>\n\n        <div> \n        <h2 style={{margin:'10px',padding:'10px'}}>Favorite Company:</h2>\n        {(e)=>getFavs()}\n        </div>\n        <br></br>\n        \n        \n        <h2 style={{margin:'10px',padding:'10px'}}>Here is list of companies</h2>\n        <br></br>\n        <br></br>\n\n        {/* Pagination */}\n        <div>\n        <Button style={{marginLeft:'20px'}} onClick={()=>setCurrentPage(currentPage-1)} disabled={currentPage == page[0]} color=\"primary\">Pervious</Button>\n        {page && page.map(i=>{\n           return <Button onClick={()=>{setCurrentPage(i)}}>{i}</Button>\n        })}\n        <Button disabled={page.length == currentPage} onClick={()=>setCurrentPage(parseInt(currentPage)+1)} color=\"primary\">Next</Button>\n        <br></br>\n        <br></br>\n        \n        {/* <label style={{marginLeft:'20px'}}>Number of records per page  </label>\n        <input onBlur={(e)=>setItemPerPage(e.target.value)} type='number' /> */}\n        </div>\n\n        <div>\n        {univName}\n        </div>  \n        </div>\n\n\n\n        ) ;      \n\n        }\n\n        export default App"]},"metadata":{},"sourceType":"module"}