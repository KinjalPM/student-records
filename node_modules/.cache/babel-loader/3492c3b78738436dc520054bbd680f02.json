{"ast":null,"code":"var _jsxFileName = \"/Users/kinjalmehta/Desktop/writeSoftwareHere/data-work/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport data from './Student_Data.json';\nimport Card from './Component/Card/Card';\nimport { v4 as uuidv4 } from 'uuid';\nimport Form from './Component/Form/Form';\nimport { useHistory } from \"react-router-dom\";\nimport { MDBCol, MDBFormInline, MDBBtn } from \"mdbreact\";\nimport { Button } from 'reactstrap';\nimport Modal from './Component/Modal/Modal';\nimport CardDetails from './Component/CardDetails/CardDetails';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet uuidData = data.map(i => {\n  return { ...i,\n    Id: uuidv4()\n  };\n});\n\nfunction App() {\n  _s();\n\n  const [fav, setFav] = useState([]);\n  const [data, setData] = useState([]);\n  const [deletedRecords, setDeletedRecords] = useState([]);\n  const [careerUrl, setCareerUrl] = useState(\"\");\n  const [employer, setEmployer] = useState(\"\");\n  const [graduationDate, setGraduationDate] = useState(\"\");\n  const [jobStartYear, setJobStartYear] = useState(\"\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [specialization, setSpecialization] = useState(\"\");\n  const [universityName, setUniversityName] = useState(\"\");\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(false);\n  const [isModalOpen, setModelOpen] = useState(false);\n  const [viewCurrentRecord, setViewCurrentRecord] = useState({});\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchInvoked, setSearchInvoked] = useState(false);\n  const [filteredData, setFilteredData] = useState([]);\n  const [graduationYearFilter, setGraduationYearFilter] = useState({});\n  const [searchDa, setSearchDA] = useState(\"\");\n  const [page, setPage] = useState();\n  const history = useHistory();\n  useEffect(() => {\n    let totalItems = 161;\n    let pageSize = 25;\n    let totalPg = Math.ceil(totalItems / pageSize); // console.log(\"totalPage: \"+totalPg);\n\n    let currentPage = 1;\n    let empArr = Array(totalPg).fill(0);\n    console.log(empArr);\n    let pages = empArr.map((i, idx) => {\n      return (idx + 1).toString();\n    });\n    console.log(pages + \"page\");\n    e.s;\n    setPage(pages);\n  }, [data]);\n\n  function handlePagniation(page) {\n    let pageNumber = Number(page);\n    console.log(\"pgNo\" + pageNumber);\n    let itemPerPage = 25;\n    let copyData = [...data];\n    let returnData = copyData.splice((pageNumber - 1) * itemPerPage, pageNumber * itemPerPage);\n    console.log(returnData);\n    setSearchInvoked(true);\n    setFilteredData(returnData);\n    console.log(page);\n  }\n\n  function getFavs(e) {\n    let empData = uuidData.filter(i => fav.includes(i.Id));\n    let returnEmployerName = empData.map(i => i.Employer);\n    e.stopPropagation();\n    return returnEmployerName.join(\",\");\n  }\n\n  function handleFormSubmit() {\n    console.log('handleFormSubmit invoked');\n    setIsSubmitDisabled(true);\n    setTimeout(() => {\n      setIsSubmitDisabled(false);\n    }, 3000);\n    let objReady = {\n      Career_Url: careerUrl,\n      Employer: employer,\n      Graduation_Year: graduationDate,\n      Job_Start_Date: jobStartYear,\n      Job_Title: jobTitle,\n      Specialization: specialization,\n      University_Name: universityName,\n      Id: uuidv4()\n    };\n    let copyData = [objReady, ...data];\n    setData(copyData);\n  } // function createNewRecord() {\n  // }\n\n\n  function deleteRecord(e, Id) {\n    let deletedRecord = data.filter(i => {\n      e.stopPropagation();\n      return i.Id === Id;\n    });\n    console.log(deletedRecord, 'deletedRecord');\n    let copyDelRecords = [...deletedRecords];\n    copyDelRecords.push(deletedRecord[0]);\n    setDeletedRecords(copyDelRecords); /////////Logic for updating screen\n\n    let remainingRecord = data.filter(i => {\n      return i.Id !== Id;\n    });\n    setData(remainingRecord);\n    console.log(remainingRecord, 'remainingRecord');\n  }\n\n  useEffect(() => {\n    setData(uuidData);\n  }, []);\n\n  function handleRetrieveAllRecords() {\n    let mergedRecords = [...deletedRecords, ...data];\n    console.log(mergedRecords, 'mergedRecords');\n    setData(mergedRecords);\n    setDeletedRecords([]);\n  }\n\n  function handleCardContainerOnClick(Id) {\n    console.log('handleCardContainer', Id);\n    let entry = data.filter(i => i.Id === Id);\n    console.log(entry, 'filteredEntry');\n    setViewCurrentRecord(entry[0]);\n    setModelOpen(true);\n  }\n\n  function handleGraduationDateOnChange(year) {\n    let copyObj = { ...graduationYearFilter\n    };\n    copyObj[year] = !copyObj[year];\n    console.log(copyObj, 'copyObj');\n    setGraduationYearFilter(copyObj);\n  }\n\n  useEffect(() => {\n    let getyears = filteredData.map(i => i.Graduation_Year);\n    let unique = [...new Set(getyears)];\n    let obj = {};\n    unique.forEach(l => {\n      obj[l] = true;\n    });\n    setGraduationYearFilter(obj);\n  }, [searchInvoked]);\n\n  function getGraduationYear() {\n    return Object.entries(graduationYearFilter).map(j => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          display: 'inlineFlex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: j[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: j[1],\n          onChange: () => handleGraduationDateOnChange(j[0]),\n          inputProps: {\n            'aria-label': 'primary checkbox'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this);\n    });\n  } // ********* CHANGE *************\n  // const univName =filterLogic().map((i,idx)=>{\n\n\n  const univName = filterLogic().map((i, idx, arr) => {\n    const {\n      Employer,\n      Career_Url,\n      Job_Title,\n      Id,\n      Graduation_Year\n    } = i;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardDiv\",\n      onClick: () => handleCardContainerOnClick(Id),\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        careerUrl: Career_Url,\n        Employer: Employer,\n        Job_Title: Job_Title,\n        Graduation_Year: Graduation_Year,\n        setFav: setFav,\n        fav: fav,\n        Id: Id,\n        deleteRecord: deleteRecord\n      }, Id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this);\n  });\n\n  function handleClear() {\n    setSearchText(\"\");\n    setSearchInvoked(false);\n  }\n\n  function handleSearch() {\n    if (searchText.length === 0) {\n      setSearchInvoked(false);\n    } else {\n      setSearchInvoked(true);\n    }\n\n    let copyData = [...data];\n    copyData = copyData.filter(i => {\n      return i.Employer.toLowerCase().includes(searchText.toLowerCase());\n    });\n    console.log(copyData, 'copyData');\n\n    if (setSearchInvoked) {\n      setFilteredData(copyData);\n    }\n  }\n\n  function handleKeyPress(e) {\n    if (e.which == 13 || e.keyCode == 13) {\n      console.log(\"enter press here!\");\n      handleSearch();\n    }\n  }\n\n  function filterLogic() {\n    if (searchInvoked) {\n      // return filteredData\n      const filterByYear = filteredData.filter(i => {\n        const gradYear = i.Graduation_Year;\n        return graduationYearFilter[gradYear];\n      });\n      return filterByYear;\n    }\n\n    return data;\n  }\n\n  function handleKeyPress(e) {\n    if (e.which == 13 || e.keyCode == 13) {\n      console.log('enter press here! ');\n      handleSearch();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          margin: '10px',\n          padding: '10px'\n        },\n        onClick: () => setFav([]),\n        children: \"Clear All Favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          margin: '10px',\n          padding: '10px'\n        },\n        onClick: () => handleRetrieveAllRecords(),\n        children: \"Retrieve All Records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px',\n        padding: '10px'\n      },\n      children: `Total record :::${filterLogic().length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px',\n        padding: '10px'\n      },\n      children: `Total deleted record :::${deletedRecords.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"display data\",\n      buttonLabel: \"Open\",\n      handleFormSubmit: handleFormSubmit,\n      isModalOpen: isModalOpen,\n      setModelOpen: setModelOpen,\n      children: /*#__PURE__*/_jsxDEV(CardDetails, {\n        Employer: viewCurrentRecord.Employer,\n        careerUrl: viewCurrentRecord.Career_Url,\n        Job_Title: viewCurrentRecord.Job_Title,\n        Job_Start_Date: viewCurrentRecord.Job_Start_Date,\n        Specialization: viewCurrentRecord.Specialization,\n        University_Name: viewCurrentRecord.University_Name,\n        Id: viewCurrentRecord.Id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search with Company name\",\n        value: searchText,\n        onKeyPress: e => handleKeyPress(e),\n        onChange: e => setSearchText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          disabled: searchInvoked,\n          onClick: () => handleSearch(),\n          color: \"primary\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 1\n      }, this), searchInvoked && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleClear(),\n          color: \"primary\",\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 6\n        }, this), getGraduationYear()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: '10px',\n          padding: '10px'\n        },\n        children: \"Favorite Company:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), e => getFavs()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        margin: '10px',\n        padding: '10px'\n      },\n      children: \"Here is list of companies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: '20px'\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), page && page.map(i => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handlePagniation(i);\n          },\n          children: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 19\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Pervious\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: univName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 1\n  }, this);\n}\n\n_s(App, \"E7G7JH46dkfRN6mindxT9fXI+n4=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kinjalmehta/Desktop/writeSoftwareHere/data-work/src/App.js"],"names":["React","useEffect","useState","data","Card","v4","uuidv4","Form","useHistory","MDBCol","MDBFormInline","MDBBtn","Button","Modal","CardDetails","Checkbox","uuidData","map","i","Id","App","fav","setFav","setData","deletedRecords","setDeletedRecords","careerUrl","setCareerUrl","employer","setEmployer","graduationDate","setGraduationDate","jobStartYear","setJobStartYear","jobTitle","setJobTitle","specialization","setSpecialization","universityName","setUniversityName","isSubmitDisabled","setIsSubmitDisabled","isModalOpen","setModelOpen","viewCurrentRecord","setViewCurrentRecord","searchText","setSearchText","searchInvoked","setSearchInvoked","filteredData","setFilteredData","graduationYearFilter","setGraduationYearFilter","searchDa","setSearchDA","page","setPage","history","totalItems","pageSize","totalPg","Math","ceil","currentPage","empArr","Array","fill","console","log","pages","idx","toString","e","s","handlePagniation","pageNumber","Number","itemPerPage","copyData","returnData","splice","getFavs","empData","filter","includes","returnEmployerName","Employer","stopPropagation","join","handleFormSubmit","setTimeout","objReady","Career_Url","Graduation_Year","Job_Start_Date","Job_Title","Specialization","University_Name","deleteRecord","deletedRecord","copyDelRecords","push","remainingRecord","handleRetrieveAllRecords","mergedRecords","handleCardContainerOnClick","entry","handleGraduationDateOnChange","year","copyObj","getyears","unique","Set","obj","forEach","l","getGraduationYear","Object","entries","j","display","univName","filterLogic","arr","handleClear","handleSearch","length","toLowerCase","handleKeyPress","which","keyCode","filterByYear","gradYear","margin","padding","target","value","marginLeft"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport './App.css'\nimport data from './Student_Data.json' ;\nimport Card from './Component/Card/Card';\nimport { v4 as uuidv4 } from 'uuid';\nimport Form from './Component/Form/Form';\nimport { useHistory } from \"react-router-dom\";\nimport { MDBCol, MDBFormInline, MDBBtn } from \"mdbreact\";\nimport { Button } from 'reactstrap';\nimport Modal from './Component/Modal/Modal'\nimport CardDetails from './Component/CardDetails/CardDetails'\nimport Checkbox from '@material-ui/core/Checkbox';\nlet  uuidData = data.map(i=>{\nreturn {\n    ...i, \n    Id: uuidv4()\n}\n\n})\n\nfunction App() {\nconst [fav, setFav] =useState([])\nconst [data, setData]=useState([])\nconst [deletedRecords, setDeletedRecords]=useState([])\nconst [careerUrl,setCareerUrl] =useState(\"\")\nconst [employer,setEmployer] =useState(\"\")\nconst [graduationDate,setGraduationDate] =useState(\"\")\nconst [jobStartYear,setJobStartYear] =useState(\"\")\nconst [jobTitle,setJobTitle] =useState(\"\")\nconst [specialization,setSpecialization] =useState(\"\")\nconst [universityName,setUniversityName] =useState(\"\")\nconst [isSubmitDisabled,setIsSubmitDisabled] =useState(false)\nconst [isModalOpen,setModelOpen] = useState(false);\nconst [viewCurrentRecord,setViewCurrentRecord]=useState({})\nconst [searchText,setSearchText]=useState(\"\")\nconst [searchInvoked,setSearchInvoked]=useState(false)\nconst [filteredData,setFilteredData]=useState([])\nconst [graduationYearFilter,setGraduationYearFilter]=useState({})\n\n const [searchDa,setSearchDA] = useState(\"\")\nconst [page,setPage] = useState()\n\nconst history= useHistory()\n\nuseEffect(()=>{\n    let  totalItems = 161;\n    let pageSize = 25;\n    let totalPg = Math.ceil(totalItems/pageSize);\n    // console.log(\"totalPage: \"+totalPg);\n    let currentPage = 1;\n    let empArr = Array(totalPg).fill(0)\n    console.log(empArr);\n    let pages = empArr.map((i,idx)=>{\n        return ((idx+1).toString())\n    })\n    console.log(pages+\"page\")\n    e.s\n    setPage(pages);\n},[data])\n\nfunction handlePagniation(page){\nlet pageNumber = Number(page);\nconsole.log(\"pgNo\"+pageNumber)\nlet itemPerPage = 25;\nlet copyData = [...data]\nlet returnData = copyData.splice((pageNumber-1)*itemPerPage,(pageNumber)*itemPerPage);\nconsole.log(returnData);\nsetSearchInvoked(true);\nsetFilteredData(returnData);\nconsole.log(page);\n}\n\n\nfunction getFavs(e) {\nlet empData= uuidData.filter(i=>fav.includes(i.Id))\nlet returnEmployerName = empData.map(i=>i.Employer)\ne.stopPropagation();\nreturn returnEmployerName.join(\",\")\n}\n\nfunction handleFormSubmit () {\n    console.log('handleFormSubmit invoked')\n    setIsSubmitDisabled(true)\n    setTimeout(()=>{\n        setIsSubmitDisabled(false)\n    },3000)\n\n    let objReady = {\n        Career_Url:careerUrl,\n        Employer:employer,\n        Graduation_Year:graduationDate,\n        Job_Start_Date:jobStartYear,\n        Job_Title:jobTitle,\n        Specialization:specialization,\n        University_Name:universityName,\n        Id:uuidv4()\n    }\nlet copyData = [objReady,...data]\n\nsetData(copyData)\n    \n}\n// function createNewRecord() {\n\n// }\n\nfunction deleteRecord (e,Id) {\n\nlet deletedRecord= data.filter((i)=>{\n    e.stopPropagation();\n return i.Id ===Id \n})\nconsole.log(deletedRecord,'deletedRecord');\n\nlet  copyDelRecords=[...deletedRecords]\ncopyDelRecords.push(deletedRecord[0])\nsetDeletedRecords(copyDelRecords)\n\n/////////Logic for updating screen\nlet remainingRecord= data.filter((i)=>{\n    return i.Id !==Id \n   })   \nsetData(remainingRecord)\nconsole.log(remainingRecord,'remainingRecord');\n}\n\nuseEffect(()=>{\nsetData(uuidData)\n},[])\n\nfunction handleRetrieveAllRecords() {\nlet mergedRecords = [...deletedRecords,...data]\nconsole.log(mergedRecords,'mergedRecords');\nsetData(mergedRecords)\nsetDeletedRecords([])\n}\n\nfunction handleCardContainerOnClick(Id){\n    console.log('handleCardContainer',Id);  \n    let entry =data.filter(i=>i.Id === Id)\n    console.log(entry,'filteredEntry');\n    setViewCurrentRecord(entry[0])\n     setModelOpen(true);\n}\n\nfunction handleGraduationDateOnChange(year){\n\n    let copyObj= {...graduationYearFilter}\n    copyObj[year]=!copyObj[year]\n console.log(copyObj,'copyObj');\n setGraduationYearFilter(copyObj)\n\n}\nuseEffect(()=>{\n    let getyears=filteredData.map(i=>i.Graduation_Year)\n    let unique = [...new Set(getyears)];\n \n    let obj={}\nunique.forEach(l=>{\n      obj[l]=true\n })\n  setGraduationYearFilter(obj)\n    \n},[searchInvoked])\n\nfunction getGraduationYear(){\n\n    return  Object.entries(graduationYearFilter).map(j=>{\n        return  <span style={{display:'inlineFlex'}}>\n       <label>{j[0]}</label>\n       <Checkbox\n          checked={j[1]}\n          onChange={()=>handleGraduationDateOnChange(j[0])}\n          inputProps={{ 'aria-label': 'primary checkbox' }}\n        />\n        </span>\n     })\n      \n  }\n\n// ********* CHANGE *************\n// const univName =filterLogic().map((i,idx)=>{\n    const univName =filterLogic().map((i,idx,arr)=>{\n        const {Employer, Career_Url, Job_Title,Id,Graduation_Year} = i \n        \n        return (\n            <div className='cardDiv' onClick={()=>handleCardContainerOnClick(Id)}>\n            <Card \n            careerUrl={Career_Url}\n            Employer={Employer}\n            Job_Title={Job_Title}\n            Graduation_Year={Graduation_Year}\n            key={Id} \n            setFav={setFav}\n            fav={fav}\n            Id={Id}\n            deleteRecord={deleteRecord}\n            />\n            </div>\n            )\n            \n        })    \n\n\n        function handleClear(){\n            setSearchText(\"\")\n            setSearchInvoked(false)\n            }\n\n            function handleSearch () {\n                if(searchText.length ===0){\n                    setSearchInvoked(false)\n                }\n                else {\n                    setSearchInvoked(true)\n                }\n            \n                let copyData =[...data]\n                    copyData = copyData.filter(i=>{\n                    return i.Employer.toLowerCase().includes(searchText.toLowerCase())\n                   }) \n                   console.log(copyData,'copyData');\n                if(setSearchInvoked){\n                   setFilteredData(copyData)\n                }\n                \n            }\n\n            function handleKeyPress (e) {\n                if(e.which == 13 || e.keyCode == 13){\n                  console.log(\"enter press here!\");\n                  handleSearch()\n                }\n              }\n            \n\nfunction filterLogic () {\nif(searchInvoked){\n    // return filteredData\n   const filterByYear= filteredData.filter((i)=>{\n const gradYear = i.Graduation_Year \nreturn graduationYearFilter[gradYear]\n   })\n   return filterByYear\n}\n    return data\n}\n\n    \n    \nfunction handleKeyPress (e) {\n    if(e.which == 13 || e.keyCode == 13){\n      console.log('enter press here! ')\n      handleSearch()\n    }\n  } \n\n\nreturn (  \n \n<div>\n\n   <div>\n   {/* <Button color=\"danger\">Danger!</Button> */}\n     <br></br>\n        <button style={{margin:'10px',padding:'10px'}} onClick={()=>setFav([])}>Clear All Favorites</button>\n        <br></br>\n        {/* <button onClick={()=>history.push(\"/\")}>Go Home </button> */}\n\n        <button style={{margin:'10px',padding:'10px'}} onClick={()=>handleRetrieveAllRecords()}>Retrieve All Records</button>\n        <br></br>\n        {/* <button onClick={()=>history.push(`/test?isSubmitDisabled=${isSubmitDisabled}`)}>Test</button> */}\n            </div> \n        <div style={{margin:'10px',padding:'10px'}}>{`Total record :::${filterLogic().length}`}</div>\n        <div style={{margin:'10px',padding:'10px'}}>{`Total deleted record :::${deletedRecords.length}`}</div>\n        {/* <Modal\n        buttonLabel= 'New Data to Add'\n        title = 'Form'\n        buttonColor = 'success'\n        cta_primary = 'submit'\n        cta_sec = 'cancel'\n        handleFormSubmit={handleFormSubmit}\n        isModalOpen = {isModalOpen}\n        setModelOpen = {setModelOpen}\n        >\n        <Form \n        careerUrl={careerUrl}\n        employer={employer}\n        graduationDate={graduationDate}\n        jobStartYear={jobStartYear}\n        jobTitle={jobTitle}\n        specialization={specialization}\n        universityName={universityName}\n        setCareerUrl={setCareerUrl}\n        setEmployer={setEmployer}\n        setGraduationDate={setGraduationDate}\n        setJobStartYear={setJobStartYear}\n        setJobTitle={setJobTitle}\n        setSpecialization={setSpecialization}\n        setUniversityName={setUniversityName}\n        // handleFormSubmit={handleFormSubmit}\n        isSubmitDisabled={isSubmitDisabled}\n        />\n        </Modal> */}\n\n        <Modal\n        title = 'display data'\n        buttonLabel=\"Open\"\n        handleFormSubmit = {handleFormSubmit}\n        isModalOpen = {isModalOpen}\n        setModelOpen = {setModelOpen}\n        >\n       <CardDetails\n        Employer = {viewCurrentRecord.Employer}\n        careerUrl = {viewCurrentRecord.Career_Url}\n        Job_Title={viewCurrentRecord.Job_Title}\n        Job_Start_Date={viewCurrentRecord.Job_Start_Date}\n        Specialization={viewCurrentRecord.Specialization}\n        University_Name={viewCurrentRecord.University_Name}\n        Id = {viewCurrentRecord.Id}\n       />\n        </Modal>\n<br></br>\n\n<div>\n<input placeholder='Search with Company name'  value={searchText} onKeyPress={(e)=>handleKeyPress(e)} onChange={(e)=>setSearchText(e.target.value)}/>\n<span style={{marginLeft:'20px'}}><Button disabled={searchInvoked} onClick={()=>handleSearch()} color=\"primary\">Search</Button></span>\n{searchInvoked && <span style={{marginLeft:'20px'}}>\n     <Button onClick={()=>handleClear()} color=\"primary\">Clear</Button>\n     {getGraduationYear()}\n\n</span>\n\n}\n</div>\n\n        <div> \n        <h2 style={{margin:'10px',padding:'10px'}}>Favorite Company:</h2>\n        {(e)=>getFavs()}\n        </div>\n        <br></br>\n        \n        \n        <h2 style={{margin:'10px',padding:'10px'}}>Here is list of companies</h2>\n        <br></br>\n        <br></br>\n\n        {/* Pagination */}\n        <div>\n        <button style={{marginLeft:'20px'}}>Next</button>\n        {page && page.map(i=>{\n           return <button onClick={()=>{handlePagniation(i)}}>{i}</button>\n        })}\n        <button>Pervious</button>\n        </div>\n\n        <div>\n        {univName}\n        </div>  \n        </div>\n\n\n\n        ) ;      \n\n        }\n\n        export default App"]},"metadata":{},"sourceType":"module"}